package dev.kons.kuenyawz.entities;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.SuperBuilder;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Special case, where transaction id (this entity id) should be defined first logically
 * before being saved to the database.
 */
@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@SuperBuilder
@Table(indexes = {
    @Index(name = "idx_transaction_status", columnList = "status"),
    @Index(name = "idx_transaction_invoiceid", columnList = "invoice_id")
})
public class Transaction extends Auditables {
	@Id
//	@SnowFlakeIdValue(name = "transaction_id")
	@Column(name = "transaction_id", columnDefinition = "BIGINT", updatable = false, nullable = false)
	private Long transactionId;

	/**
	 * This is generated by Xendit, it is their internal invoice id for the current transaction.
	 */
	@Column(unique = true, nullable = false)
	private String invoiceId;

	@Column
	private BigDecimal amount;

	private String invoiceLink;

	@Column(nullable = false)
	@Enumerated(EnumType.STRING)
	private TransactionStatus status;

	@Column
	private LocalDateTime expiresAt;

	@Column
	private LocalDateTime finalizedAt;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false)
	private Account account;

    @JsonFormat(shape = JsonFormat.Shape.STRING)
    @Getter
    public enum TransactionStatus {
		@JsonProperty("PENDING")
        PENDING("Payment yet to be paid"),

		@JsonProperty("PAID")
        PAID("Payment has been paid"),

		@JsonProperty("SETTLED")
        SETTLED("Transaction has been settled to cash"),

		@JsonProperty("EXPIRED")
        EXPIRED("Transaction has expired");

        private final String description;

        TransactionStatus(String description) {
            this.description = description;
        }

        @JsonValue
        public String getValue() {
            return name();
        }
    }
}
