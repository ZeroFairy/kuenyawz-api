package dev.kons.kuenyawz.entities;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.SuperBuilder;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Special case, where transaction id (this entity id) should be defined first logically
 * before being saved to the database.
 */
@Entity
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@SuperBuilder
public class Transaction extends Auditables {
	@Id
//	@SnowFlakeIdValue(name = "transaction_id")
	@Column(name = "transaction_id", columnDefinition = "BIGINT", updatable = false, nullable = false)
	private Long transactionId;

	/**
	 * This is generated by Xendit, it is their internal invoice id for the current transaction.
	 */
	@Column(name = "invoice_id", unique = true, nullable = false)
	private String invoiceId;

	@Column
	private BigDecimal amount;

	@Column(name = "invoice_link")
	private String invoiceLink;

	@Enumerated(EnumType.STRING)
	@Column(name = "status", nullable = false)
	private TransactionStatus status;

	@Column(name = "expires_at")
	private LocalDateTime expiresAt;

	@Column(name = "finalized_at")
	private LocalDateTime finalizedAt;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "account_id", nullable = false)
	private Account account;

	public enum TransactionStatus {
		PENDING, PAID, SETTLED, EXPIRED
	}
}
